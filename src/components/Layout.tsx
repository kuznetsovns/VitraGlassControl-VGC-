import { useState } from 'react'
import './Layout.css'
import MainContent from './MainContent'

export interface MenuItem {
  id: string
  label: string
  icon?: string
}

const menuItems: MenuItem[] = [
  { id: 'vitrage-drawing', label: '–û—Ç—Ä–∏—Å–æ–≤–∫–∞ –≤–∏—Ç—Ä–∞–∂–µ–π —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏', icon: 'üìê' },
  { id: 'specification', label: '–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è –≤–∏—Ç—Ä–∞–∂–µ–π', icon: 'üìã' },
  { id: 'floor-plans', label: '–ü–ª–∞–Ω —ç—Ç–∞–∂–µ–π', icon: 'üè¢' },
  { id: 'facade-plans', label: '–ü–ª–∞–Ω—ã —Ñ–∞—Å–∞–¥–æ–≤', icon: 'üèóÔ∏è' },
  { id: 'support', label: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞', icon: '‚ùì' },
  { id: 'settings', label: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', icon: '‚öôÔ∏è' },
  { id: 'admin', label: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ', icon: 'üë•' }
]

export default function Layout() {
  const [activeMenuItem, setActiveMenuItem] = useState('main')
  const [sidebarCollapsed, setSidebarCollapsed] = useState(false) // Start expanded

  const toggleSidebar = () => {
    setSidebarCollapsed(!sidebarCollapsed)
  }

  const handleLogoClick = () => {
    setActiveMenuItem('main')
  }

  return (
    <div className={`layout ${sidebarCollapsed ? 'sidebar-collapsed' : ''}`}>
      <aside className={`sidebar ${sidebarCollapsed ? 'collapsed' : ''}`}>
        <div className="sidebar-header">
          <div className="logo-container">
            <div className="logo" onClick={handleLogoClick}>
              <span className="logo-text">VGC</span>
            </div>
          </div>
          {!sidebarCollapsed && (
            <>
              <h1 className="sidebar-title">VitraGlassControl</h1>
              <div className="sidebar-subtitle">–£—á–µ—Ç –≤–∏—Ç—Ä–∞–∂–µ–π —Å–æ —Å—Ç–µ–∫–ª–æ–ø–∞–∫–µ—Ç–∞–º–∏</div>
            </>
          )}
        </div>
        <button 
          className="sidebar-toggle"
          onClick={toggleSidebar}
          title={sidebarCollapsed ? "–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –ø–∞–Ω–µ–ª—å" : "–°–≤–µ—Ä–Ω—É—Ç—å –ø–∞–Ω–µ–ª—å"}
        >
          <span className="toggle-icon">
            {sidebarCollapsed ? '‚ñ∂' : '‚óÄ'}
          </span>
        </button>
        <nav className="sidebar-nav">
          {menuItems.map((item) => (
            <button
              key={item.id}
              className={`menu-item ${activeMenuItem === item.id ? 'active' : ''}`}
              onClick={() => setActiveMenuItem(item.id)}
              title={sidebarCollapsed ? item.label : ''}
            >
              <span className="menu-icon">{item.icon}</span>
              {!sidebarCollapsed && (
                <span className="menu-label">{item.label}</span>
              )}
            </button>
          ))}
        </nav>
      </aside>
      <main className="main-content">
        <div className="content-area">
          <MainContent 
            activeSection={activeMenuItem} 
            onSectionChange={setActiveMenuItem}
          />
        </div>
      </main>
    </div>
  )
}